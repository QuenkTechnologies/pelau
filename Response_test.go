// Automatically generated by MockGen. DO NOT EDIT!
// Source: Response.go

package pelau

import (
	http "net/http"
	gomock "code.google.com/p/gomock/gomock"
)

// Mock of Response interface
type MockResponse struct {
	ctrl     *gomock.Controller
	recorder *_MockResponseRecorder
}

// Recorder for MockResponse (not exported)
type _MockResponseRecorder struct {
	mock *MockResponse
}

func NewMockResponse(ctrl *gomock.Controller) *MockResponse {
	mock := &MockResponse{ctrl: ctrl}
	mock.recorder = &_MockResponseRecorder{mock}
	return mock
}

func (_m *MockResponse) EXPECT() *_MockResponseRecorder {
	return _m.recorder
}

func (_m *MockResponse) Head(_param0 string, _param1 string) Response {
	ret := _m.ctrl.Call(_m, "Head", _param0, _param1)
	ret0, _ := ret[0].(Response)
	return ret0
}

func (_mr *_MockResponseRecorder) Head(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Head", arg0, arg1)
}

func (_m *MockResponse) Redirect(_param0 string, _param1 int) Response {
	ret := _m.ctrl.Call(_m, "Redirect", _param0, _param1)
	ret0, _ := ret[0].(Response)
	return ret0
}

func (_mr *_MockResponseRecorder) Redirect(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Redirect", arg0, arg1)
}

func (_m *MockResponse) Send(_param0 string, _param1 interface{}) error {
	ret := _m.ctrl.Call(_m, "Send", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockResponseRecorder) Send(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Send", arg0, arg1)
}

func (_m *MockResponse) Header() http.Header {
	ret := _m.ctrl.Call(_m, "Header")
	ret0, _ := ret[0].(http.Header)
	return ret0
}

func (_mr *_MockResponseRecorder) Header() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Header")
}

func (_m *MockResponse) Write(_param0 []byte) (int, error) {
	ret := _m.ctrl.Call(_m, "Write", _param0)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockResponseRecorder) Write(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Write", arg0)
}

func (_m *MockResponse) WriteHeader(_param0 int) {
	_m.ctrl.Call(_m, "WriteHeader", _param0)
}

func (_mr *_MockResponseRecorder) WriteHeader(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "WriteHeader", arg0)
}
