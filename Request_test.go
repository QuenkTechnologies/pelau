// Automatically generated by MockGen. DO NOT EDIT!
// Source: Request.go

package pelau

import (
	gomock "code.google.com/p/gomock/gomock"
)

// Mock of Request interface
type MockRequest struct {
	ctrl     *gomock.Controller
	recorder *_MockRequestRecorder
}

// Recorder for MockRequest (not exported)
type _MockRequestRecorder struct {
	mock *MockRequest
}

func NewMockRequest(ctrl *gomock.Controller) *MockRequest {
	mock := &MockRequest{ctrl: ctrl}
	mock.recorder = &_MockRequestRecorder{mock}
	return mock
}

func (_m *MockRequest) EXPECT() *_MockRequestRecorder {
	return _m.recorder
}

func (_m *MockRequest) Param(_param0 int) string {
	ret := _m.ctrl.Call(_m, "Param", _param0)
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockRequestRecorder) Param(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Param", arg0)
}

func (_m *MockRequest) Get(_param0 string) string {
	ret := _m.ctrl.Call(_m, "Get", _param0)
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockRequestRecorder) Get(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Get", arg0)
}

func (_m *MockRequest) ParseBody(_param0 string, _param1 interface{}, _param2 func(error, interface{})) Request {
	ret := _m.ctrl.Call(_m, "ParseBody", _param0, _param1, _param2)
	ret0, _ := ret[0].(Request)
	return ret0
}

func (_mr *_MockRequestRecorder) ParseBody(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ParseBody", arg0, arg1, arg2)
}

func (_m *MockRequest) Register(_param0 string, _param1 func(Request) Decoder) Request {
	ret := _m.ctrl.Call(_m, "Register", _param0, _param1)
	ret0, _ := ret[0].(Request)
	return ret0
}

func (_mr *_MockRequestRecorder) Register(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Register", arg0, arg1)
}

func (_m *MockRequest) Raw(_param0 func(*ModifiedRequest)) Request {
	ret := _m.ctrl.Call(_m, "Raw", _param0)
	ret0, _ := ret[0].(Request)
	return ret0
}

func (_mr *_MockRequestRecorder) Raw(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Raw", arg0)
}
